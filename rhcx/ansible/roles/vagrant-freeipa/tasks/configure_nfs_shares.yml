---
# Every Ansible task file needing to manipulate the firewall must make sure
# software requirements for Ansible to manipulate the firewall are installed
# and the firewall service in enabled and started.
- name: Ensure necessary packages are installed
  package:
    name: "{{ item }}"
    state: present
  become: yes
  with_items:
    - python-firewall
- name: Ensure firewalld is started and enabled at boot
  service:
    name: firewalld
    state: started
    enabled: yes
  become: yes
- name: Ensure NFS traffic is allowed
  firewalld:
    service: "{{ item.service }}"
    state: enabled
    permanent: yes
    immediate: yes
    zone: "{{ item.zone }}"
  with_items:
    - { zone: internal, service: nfs }
    - { zone: internal, service: mountd }
    - { zone: internal, service: rpc-bind }
  become: yes
- name: Ensure /srv/nfsexport directory exists
  file:
    path: '/srv/nfsexport'
    owner: root
    group: root
    mode: '0755'
    state: directory
  become: yes
- name: Ensure NFS share has correct SELinux fcontext
  sefcontext:
    target: '/srv/nfsexport(/.*)?'
    setype: nfs_t
    state: present
  become: yes
- name: Ensure NFS share is exported
  copy:
    dest: /etc/exports.d/nfsexport.exports
    content: "/srv/nfsexport *(rw)"
    owner: root
    group: root
    mode: '0644'
  become: yes
# NFS Home Directories
- name: Ensure NFS home directories exist
  file:
    path: '/home/ldap'
    owner: root
    group: root
    mode: '0755'
    state: directory
  become: yes
- name: Ensure NFS home directories have correct SELinux fcontext
  sefcontext:
    target: '/home/ldap(/.*)?'
    setype: nfs_t
    state: present
  become: yes
- name: Ensure NFS home directories are exported
  copy:
    dest: /etc/exports.d/nfshome.exports
    content: "/home/ldap	*(rw)"
    owner: root
    group: root
    mode: '0644'
  become: yes
- name: Ensure nfs-server is started and enabled at boot
  service:
    name: nfs-server
    state: started
    enabled: yes
  become: yes
