---
- name: Ensure /etc/hosts includes all hosts prior to configuring DNS
  lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
  become: yes
  with_items:
    - "192.168.4.200 labipa.example.com ipa"
    - "192.168.4.210 server1.example.com server1"
    - "192.168.4.220 server2.example.com server2"
    - "192.168.4.230 testnetinstall.example.com testnetinstall"
# The nmcli module is broken in ansible 2.4. This is supposedly fixed in
# the 2.5 devel branch.  https://github.com/ansible/ansible/pull/34577. I will
# revisit this when it is fixed in production.
#
- name: Ensure NetworkManager is started and enabled at boot
  service:
    name: NetworkManager
    state: started
    enabled: yes
  become: yes
- name: Check if libvirtd service is installed
  stat:
    path: /usr/lib/systemd/system/libvirtd.service
  register: libvirtd
  changed_when: false
- name: Ensure libvirtd is stopped and disabled at boot
  service:
    name: libvirtd
    state: stopped
    enabled: no
  become: yes
  when: libvirtd.stat.isreg is defined
- name: Get a list of existing connections
  command: nmcli -t -f name c show
  register: existing_connections
  changed_when: false
  become: root
- name: Ensure vagrant and example_com connections exist (CentOS 7)
  command: nmcli c add con-name "{{ item.key }}" type "{{ item.value.type }}" ifname "{{ item.value.ifname }}" connection.autoconnect "{{ item.value.connection.autoconnect }}" connection.zone "{{ item.value.connection.zone }}" ipv4.method "{{ item.value.ipv4.method }}" ipv4.dns "{{ item.value.ipv4.dns }}" ipv4.addresses "{{ item.value.ipv4.addresses }}" ipv4.gateway "{{ item.value.ipv4.gateway }}" ipv4.ignore-auto-dns "{{ item.value.ipv4.ignore_auto_dns }}" ipv4.never-default "{{ item.value.ipv4.never_default }}" ipv6.method "{{ item.value.ipv6.method }}"
  become: yes
  with_dict: "{{ nmcon }}"
  when: ansible_distribution_major_version == "7" and item.key not in existing_connections.stdout_lines
- name: Ensure vagrant and example_com connections exist (CentOS 8)
  command: nmcli c add con-name "{{ item.key }}" type "{{ item.value.type }}" ifname "{{ item.value.ifname8 }}" connection.autoconnect "{{ item.value.connection.autoconnect }}" connection.zone "{{ item.value.connection.zone }}" ipv4.method "{{ item.value.ipv4.method }}" ipv4.dns "{{ item.value.ipv4.dns }}" ipv4.addresses "{{ item.value.ipv4.addresses }}" ipv4.gateway "{{ item.value.ipv4.gateway }}" ipv4.ignore-auto-dns "{{ item.value.ipv4.ignore_auto_dns }}" ipv4.never-default "{{ item.value.ipv4.never_default }}" ipv6.method "{{ item.value.ipv6.method }}"
  become: yes
  with_dict: "{{ nmcon }}"
  when: ansible_distribution_major_version == "8" and item.key not in existing_connections.stdout_lines
- name: Get a list of active connections
  command: nmcli -t -f name c show --active
  register: active_connections
  changed_when: false
  become: root
- name: Ensure vagrant and example_com connections are up
  command: nmcli c up "{{ item.key }}"
  become: yes
  with_dict: "{{ nmcon }}"
  when: item.key not in active_connections.stdout_lines
- name: Ensure inactive connections are removed
  command: "nmcli c del \"{{ item }}\""
  become: yes
  loop: "{{ existing_connections.stdout_lines }}"
  when: item not in nmcon and item != host_vagrant_net_conn_name
# Don't know why this isn't getting deleted but we can use the heavy handed approach
- name: Remove ifcfg-{{ nmcon.example_com.ifname }} if it is still hanging around
  file:
    path: /etc/sysconfig/network-scripts/ifcfg-{{ nmcon.example_com.ifname }}
    state: absent
  become: yes
  when: ansible_distribution_major_version == "7"
- name: Remove ifcfg-{{ nmcon.example_com.ifname8 }} if it is still hanging around
  file:
    path: /etc/sysconfig/network-scripts/ifcfg-{{ nmcon.example_com.ifname8 }}
    state: absent
  become: yes
  when: ansible_distribution_major_version == "8"
