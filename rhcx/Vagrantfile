# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # These are the VM configuration defaults when not overridden
  config.ssh.private_key_path = "~/keys/vagrant"
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.provision :ansible do |ansible|
    ansible.playbook = "ansible/vagrant-vm-playbook.yml"
    ansible.skip_tags = "disabled"
    ansible.groups = {
      "labhost" => [
        "labipa-7","server1-7","server2-7",
        "labipa-8","server1-8","server2-8",
        "testnetinstall"
      ],
      "ipa_client" => [
        "server1-7","server2-7",
        "server1-8","server2-8",
        "testnetinstall"
      ],
      "ipa_server" => [
        "labipa-7",
        "labipa-8"
      ]
    }
  end

  #config.vm.provider "qemu" do |vb|
  config.vm.provider :libvirt do |libvirt|
    libvirt.driver = "kvm"
    libvirt.host = "localhost"
    libvirt.uri = 'qemu:///system'
    libvirt.memory = 1024
  end

  #==============================
  #==  CentOS 7.x Lab Machines ==
  #==============================
  #=== labipa ===
  config.vm.define "labipa-7", autostart: false do |node|
    node.vm.box = "CentOS-7.7-1908-x86_64-ServerWithGui"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
    node.vm.provider :libvirt do |vb|
      vb.memory = 2048
    end
  end

  #=== server1 ===
  config.vm.define "server1-7", autostart: false do |node|
    node.vm.box = "CentOS-7.7-1908-x86_64-ServerWithGui"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
  end 
  
  #=== server2 ===
  config.vm.define "server2-7", autostart: false do |node|
    node.vm.box = "CentOS-7.7-1908-x86_64-Minimal"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
  end
  
  #==============================
  #==  CentOS 8.x Lab Machines ==
  #==============================
  #=== labipa ===
  config.vm.define "labipa-8" do |node|
    node.vm.box = "CentOS-8.0-1905-x86_64-ServerWithGui"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
    node.vm.provider :libvirt do |vb|
      vb.memory = 2048
    end
  end

  #=== server1 ===
  config.vm.define "server1-8" do |node|
    node.vm.box = "CentOS-8.0-1905-x86_64-ServerWithGui"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
  end 
  
  #=== server2 ===
  config.vm.define "server2-8" do |node|
    node.vm.box = "CentOS-8.0-1905-x86_64-Minimal"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
  end
  
  #==============================
  #==  Additional Lab Machines ==
  #==============================
  # You can use this maching to practice installing from installation media.
  # The Vagrant box image needs to exist to spin up the VM but is otherwise
  # irrelevant as you will install over it.
  #=== testnetinstall ===
  config.vm.define "testnetinstall", autostart: false do |node|
    node.vm.box = "CentOS-8.0-1905-x86_64-Minimal"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
  end

  #=== pxeclient ===
  config.vm.define :pxeclient do |pxeclient|
    pxeclient.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"

    pxeclient.vm.provider :libvirt do |domain|
      domain.memory = 1000
      boot_network = {'network' => 'vagrant-private-dhcp'}
      domain.storage :file, :size => '10G', :type => 'qcow2'
      domain.boot boot_network
      domain.boot 'hd'
    end
  end

  #===================================
  #==  Machines for practice exams  ==
  #===================================
  #=== exam1 ===
  config.vm.define "exam1", autostart: false do |node|
    node.vm.box = "CentOS-8.0-1905-x86_64-Minimal"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
  end

  #=== exam2 ===
  config.vm.define "exam2", autostart: false do |node|
    node.vm.box = "CentOS-8.0-1905-x86_64-Minimal"
    node.vm.network :private_network,
      :type => "dhcp",
      :libvirt__network_name => "vagrant-private-dhcp",
      :libvirt__domain_name => "example.com",
      :libvirt__network_address => "192.168.4.0",
      :libvirt__netmask => "255.255.255.0",
      :libvirt__dhcp_enabled => true,
      :libvirt__host_ip => "192.168.4.1",
      :libvirt__dhcp_start => "192.168.4.2",
      :libvirt__dhcp_stop => "192.168.4.99"
  end
end
