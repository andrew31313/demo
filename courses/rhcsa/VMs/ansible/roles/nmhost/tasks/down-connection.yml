---
- name: Ensure network variables are set ({{ item.netvars }})
  ansible.builtin.include_vars:
    file: "netcfg-{{ item.netvars }}.yml"
    name: netcfg
  when: item.netvars is defined
- name: Ensure {{ item.conn_name }} connection is present
  community.general.nmcli:
    conn_name: "{{ item.conn_name }}"
    state: present
    autoconnect: "{{ item.autoconnect | default(omit) }}"
    dns4: "{{ netcfg.dns4 | default(omit) }}"
    dns4_ignore_auto: "{{ netcfg.dns4_ignore_auto | default(omit) }}"
    gw4: "{{ netcfg.gw4 | default(omit) }}"
    ifname: "{{ item.ifname | default(omit) }}"
    ip4: "{{ item.ip4 | default(omit) }}"
    method4: "{{ netcfg.method4 | default(omit) }}"
    method6: "{{ netcfg.method6 | default(omit) }}"
    never_default4: "{{ netcfg.never_default4 | default(omit) }}"
    type: "{{ netcfg.type | default(omit) }}"
    zone: "{{ netcfg.zone | default(omit) }}"
  become: yes
  debugger: on_failed
- name: Get list of active connections
  ansible.builtin.shell: nmcli c show --active | awk 'NR != 1 { print $1; }'
  changed_when: false
  register: active_connections
- ansible.builtin.debug:
    var: active_connections
- name: Ensure {{ item.conn_name }} connection is down
  ansible.builtin.command: nmcli c down {{ item.conn_name }}
  changed_when: item.conn_name in active_connections.stdout_lines
  when: item.conn_name in active_connections.stdout_lines
  become: yes
- name: Ensure /etc/hosts includes static additions for {{ item.netvars }}
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: "{{ netcfg.hostfile_additions }}"
    marker: "# {mark} static entries for {{ item.netvars }} network"
  become: yes
  when: netcfg.hostfile_additions is defined
