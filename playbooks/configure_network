#!/bin/bash
# This script is installed in the Alpine Linux docker image if
# ANSIBLE_CONTROLLER='true' is added to the environment when the
# container is created.

ORIGINAL_DIR=$PWD

# Ensure git and ansible is installed on Alpine Linux
[ -f /etc/alpine-release ] &&
  ( [ -h /usr/bin/git ] || sudo apk add --no-cache git ) &&
  ( [ -h /usr/bin/ansible-playbook ] || sudo apk add --no-cache ansible )

# Ensure we're working with the most recent repo commit
if [ ! -d $HOME/labnetwork ]; then
  mkdir $HOME/labnetwork \
  && cd $HOME/labnetwork \
  && git init -b main \
  && git sparse-checkout init \
  && git config core.sparseCheckoutCone true \
  && git sparse-checkout set playbooks/ \
  && git remote add origin https://github.com/dmbrownlee/demo.git \
  && git pull origin release \
  && git checkout release
else
  cd $HOME/labnetwork/playbooks \
  && git pull
  echo
  diff -q $HOME/configure_network $HOME/labnetwork/playbooks/configure_network
  if [ $? -ne 0 ]; then
    cp $HOME/playbooks/configure_network $HOME/configure_network
    echo "Setup script updated"
    echo
  fi
fi

if [[ $# -ne 0 ]]; then
  PROJECTNAME=${1}
else
  cat - <<DONE
The configure_network script has ensured that git and Ansible are installed and has
fetched the playbooks directory locally.  If you would like to run the Ansible
playbook to configure the nodes in your network project, you need to pass the
name of the network project you wish to configure as the first argument.

Example:
./configure_network networkplus

DONE
  exit 1
fi

echo "Make sure all the devices in the network project are started !!!"
echo
read -p "Press enter when you are ready to continue (Ctrl-c to abort)." a

cd $HOME/labnetwork/playbooks/projects/$PROJECTNAME && ansible-playbook -k -K site.yml
cd $ORIGINAL_DIR
