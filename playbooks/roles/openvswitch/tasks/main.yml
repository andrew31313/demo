---
- name: Ensure the openvswitch package is installed
  ansible.builtin.package:
    name: openvswitch
    state: present
  become: yes
- name: Ensure the run time directory for UNIX domain sockets exists
  ansible.builtin.file:
    path: /var/run/openvswitch
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
- name: Ensure the openvswitch database exists
  ansible.builtin.command:
    argv:
      - ovsdb-tool
      - create
      - /etc/openvswitch/conf.db
      - /usr/share/openvswitch/vswitch.ovsschema
    creates: /etc/openvswitch/conf.db
  become: yes
- name: Ensure runit support for {{ service.name }} is installed and enabled
  ansible.builtin.include_role:
    name: runit-service
  loop: "{{ runit_services }}"
  loop_control:
    loop_var: service
    label: "{{ service }}"
- name: Ensure bridges exist
  openvswitch.openvswitch.openvswitch_bridge:
    bridge: "{{ bridge.name }}"
    state: "{{ bridge.state | default('present') }}"
  become: yes
  loop: "{{ openvswitch.bridges | default(default_bridges) }}"
  loop_control:
    loop_var: bridge
    label: "{{ bridge }}"
  notify: pause_for_switch_updates
- name: Ensure ports are added to bridges
  openvswitch.openvswitch.openvswitch_port:
    port: "{{ port.name }}"
    bridge: "{{ port.bridge }}"
    state: "{{ port.state | default('present') }}"
    tag: "{{ port.vlan | default(omit) }}"
  become: yes
  when: port.name != 'eth0'
  loop: "{{ openvswitch.bridge_ports | default(default_bridge_ports) }}"
  loop_control:
    loop_var: port
    label: "{{ port }}"
  notify: pause_for_switch_updates
- name: Ensure the bridge is implemented in userspace
  openvswitch.openvswitch.openvswitch_db:
    table: Bridge
    record: "{{ bridge.name }}"
    col: datapath_type
    value: "{{ bridge.datapath_type }}"
  when: bridge.datapath_type is defined
  become: yes
  loop: "{{ openvswitch.bridges | default(default_bridges) }}"
  loop_control:
    loop_var: bridge
    label: "{{ bridge }}"
- name: Ensure the bridge has a fixed datapath_id
  openvswitch.openvswitch.openvswitch_db:
    table: Bridge
    record: "{{ bridge.name }}"
    col: other_config
    key: datapath-id
    value: "{{ bridge.datapath_id }}"
  when: bridge.datapath_id is defined
  become: yes
  loop: "{{ openvswitch.bridges | default(default_bridges) }}"
  loop_control:
    loop_var: bridge
    label: "{{ bridge }}"
- name: Ensure STP is enabled on bridges
  openvswitch.openvswitch.openvswitch_db:
    table: Bridge
    record: "{{ bridge.name }}"
    col: stp_enable
    value: "{{ bridge.stp_enable }}"
  when: bridge.stp_enable is defined
  become: yes
  loop: "{{ openvswitch.bridges | default(default_bridges) }}"
  loop_control:
    loop_var: bridge
    label: "{{ bridge }}"
