---
- name: Ensure a .ssh directory exists for SSH keys
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.ssh"
    state: directory
    mode: '0700'
  when: control_host is defined and control_host
- name: Ensure ssh key exists
  community.crypto.openssh_keypair:
    path: "{{ ansible_user_dir }}/.ssh/{{ ansible_user_id }}"
    state: present
    comment: "Ansible configuration account"
  when: control_host is defined and control_host
- name: Ensure public key is copied to authorized keys on host (if this hangs, you may have typed the wrong password)
  ansible.posix.authorized_key:
    user: "{{ ansible_user_id }}"
    state: present
    key: "{{ lookup('file', '{{ ansible_user_dir }}/.ssh/{{ ansible_user_id }}.pub') }}"
- name: Ensure hostname is set to FQDN
  ansible.builtin.hostname:
    name: "{{ inventory_hostname_short }}.{{ mydomain }}"
  become: yes
  when: ansible_fqdn == inventory_hostname_short
- name: Ensure FQDN is resolvable via /etc/hosts
  ansible.builtin.replace:
    path: /etc/hosts
    regexp: '^(127.0.1.1\s+)(\S+)$'
    replace: '\1\2.networkplus.test \2'
  become: yes
- name: Ensure /ets/hosts contains static IPs for network gear
  ansible.builtin.template:
    src: "hosts.j2"
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'
  become: yes
  when: populate_hosts_file is defined and populate_hosts_file
- name: Ensure network interfaces config file exists
  ansible.builtin.template:
    src: "interfaces.j2"
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: '0644'
  become: yes
  notify: restart_interfaces
- name: Ensure VLAN interfaces exist, are configured, and are up
  ansible.builtin.shell: ip link add link {{ item.key.split('.')[0] }} name {{ item.key.split('.')[0] }}.{{ item.key.split('.')[1] }} type vlan id {{ item.key.split('.')[1] }} && ip address add {{ item.value.address }}/{{ item.value.netmask }} dev {{ item.key }} && ip link set dev {{ item.key }} up
  loop: "{{ interfaces | dict2items }}"
  when: item.key not in ansible_interfaces and item.key is regex('\.\d+$')
  become: yes
- name: Ensure apk cache is updated before installing packages
  community.general.apk:
    update_cache: yes
  changed_when: false
  become: yes
- name: Ensure iputils is installed
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  loop:
    - iputils
  become: yes
- name: Ensure firewall is configured if defined
  block:
    - name: Ensure iptables is installed
      ansible.builtin.package:
        name: "{{ item }}"
        state: latest
      loop:
        - iptables
      become: yes
    - name: Ensure iptables rules file exists
      ansible.builtin.template:
        dest: /etc/iptables/rules.v4
        src: iptables_rules.v4.j2
        owner: root
        group: root
        mode: '0644'
      become: yes
    - name: Ensure changes to firewall are always applied immediately
      ansible.builtin.shell: /sbin/iptables-restore < /etc/iptables/rules.v4
      changed_when: false
      become: yes
    - name: Ensure persistent iptables rules get loaded at boot
      ansible.builtin.copy:
        dest: /etc/network/if-pre-up.d/firewall
        content: |
          #!/bin/bash
          if [ -f /etc/iptables/rules.v4 ]; then
            /sbin/iptables-restore < /etc/iptables/rules.v4
          fi
        owner: root
        group: root
        mode: "0755"
      become: yes
  when: fw is defined
